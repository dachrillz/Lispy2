
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftTIMESDIVIDEBANG BOOLEAN CLASS DIVIDE DOT ELSE EQUAL EXTENDS FALSE GREATER IF INT LBRACE LBRACKET LESS LPAREN MAIN MINUS NEW NUMBER PLUS PUBLIC RBRACE RBRACKET RETURN RPAREN SEMI STATIC STRING THIS TIMES TRUE VOID WHILE idstatement : id EQUAL expressionstatement : expressionexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression DIVIDE expression expression : LPAREN expression RPARENexpression : NUMBERexpression : id'
    
_lr_action_items = {'$end':([1,3,4,5,6,13,14,15,16,17,18,],[-8,-9,-2,0,-9,-7,-1,-6,-4,-5,-3,]),'EQUAL':([3,],[8,]),'NUMBER':([0,2,8,9,10,11,12,],[1,1,1,1,1,1,1,]),'LPAREN':([0,2,8,9,10,11,12,],[2,2,2,2,2,2,2,]),'id':([0,2,8,9,10,11,12,],[3,6,6,6,6,6,6,]),'RPAREN':([1,6,7,13,15,16,17,18,],[-8,-9,13,-7,-6,-4,-5,-3,]),'DIVIDE':([1,3,4,6,7,13,14,15,16,17,18,],[-8,-9,9,-9,9,-7,9,-6,9,-5,9,]),'MINUS':([1,3,4,6,7,13,14,15,16,17,18,],[-8,-9,10,-9,10,-7,10,-6,-4,-5,-3,]),'TIMES':([1,3,4,6,7,13,14,15,16,17,18,],[-8,-9,11,-9,11,-7,11,-6,11,-5,11,]),'PLUS':([1,3,4,6,7,13,14,15,16,17,18,],[-8,-9,12,-9,12,-7,12,-6,-4,-5,-3,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([0,2,8,9,10,11,12,],[4,7,14,15,16,17,18,]),'statement':([0,],[5,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> id EQUAL expression','statement',3,'p_statement_assign','parser.py',30),
  ('statement -> expression','statement',1,'p_statement_expr','parser.py',34),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','parser.py',39),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','parser.py',40),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop','parser.py',41),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','parser.py',42),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','parser.py',50),
  ('expression -> NUMBER','expression',1,'p_expression_number','parser.py',54),
  ('expression -> id','expression',1,'p_expression_name','parser.py',59),
]
