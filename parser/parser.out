Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> expression
Rule 1     expression -> LPAREN explist RPAREN
Rule 2     explist -> expression
Rule 3     explist -> explist expression
Rule 4     expression -> NUMBER
Rule 5     expression -> SYMBOL

Terminals, with rules where they appear

LPAREN               : 1
NUMBER               : 4
RPAREN               : 1
SYMBOL               : 5
error                : 

Nonterminals, with rules where they appear

explist              : 1 3
expression           : 2 3 0

Parsing method: LALR

state 0

    (0) S' -> . expression
    (1) expression -> . LPAREN explist RPAREN
    (4) expression -> . NUMBER
    (5) expression -> . SYMBOL

    LPAREN          shift and go to state 2
    NUMBER          shift and go to state 3
    SYMBOL          shift and go to state 4

    expression                     shift and go to state 1

state 1

    (0) S' -> expression .



state 2

    (1) expression -> LPAREN . explist RPAREN
    (2) explist -> . expression
    (3) explist -> . explist expression
    (1) expression -> . LPAREN explist RPAREN
    (4) expression -> . NUMBER
    (5) expression -> . SYMBOL

    LPAREN          shift and go to state 2
    NUMBER          shift and go to state 3
    SYMBOL          shift and go to state 4

    expression                     shift and go to state 5
    explist                        shift and go to state 6

state 3

    (4) expression -> NUMBER .

    $end            reduce using rule 4 (expression -> NUMBER .)
    RPAREN          reduce using rule 4 (expression -> NUMBER .)
    LPAREN          reduce using rule 4 (expression -> NUMBER .)
    NUMBER          reduce using rule 4 (expression -> NUMBER .)
    SYMBOL          reduce using rule 4 (expression -> NUMBER .)


state 4

    (5) expression -> SYMBOL .

    $end            reduce using rule 5 (expression -> SYMBOL .)
    RPAREN          reduce using rule 5 (expression -> SYMBOL .)
    LPAREN          reduce using rule 5 (expression -> SYMBOL .)
    NUMBER          reduce using rule 5 (expression -> SYMBOL .)
    SYMBOL          reduce using rule 5 (expression -> SYMBOL .)


state 5

    (2) explist -> expression .

    RPAREN          reduce using rule 2 (explist -> expression .)
    LPAREN          reduce using rule 2 (explist -> expression .)
    NUMBER          reduce using rule 2 (explist -> expression .)
    SYMBOL          reduce using rule 2 (explist -> expression .)


state 6

    (1) expression -> LPAREN explist . RPAREN
    (3) explist -> explist . expression
    (1) expression -> . LPAREN explist RPAREN
    (4) expression -> . NUMBER
    (5) expression -> . SYMBOL

    RPAREN          shift and go to state 8
    LPAREN          shift and go to state 2
    NUMBER          shift and go to state 3
    SYMBOL          shift and go to state 4

    expression                     shift and go to state 7

state 7

    (3) explist -> explist expression .

    RPAREN          reduce using rule 3 (explist -> explist expression .)
    LPAREN          reduce using rule 3 (explist -> explist expression .)
    NUMBER          reduce using rule 3 (explist -> explist expression .)
    SYMBOL          reduce using rule 3 (explist -> explist expression .)


state 8

    (1) expression -> LPAREN explist RPAREN .

    $end            reduce using rule 1 (expression -> LPAREN explist RPAREN .)
    RPAREN          reduce using rule 1 (expression -> LPAREN explist RPAREN .)
    LPAREN          reduce using rule 1 (expression -> LPAREN explist RPAREN .)
    NUMBER          reduce using rule 1 (expression -> LPAREN explist RPAREN .)
    SYMBOL          reduce using rule 1 (expression -> LPAREN explist RPAREN .)

